<?php

include_once drupal_get_path('module', 'cassie').'/Cassie.class.php';
include_once drupal_get_path('module', 'cassie').'/UUID.class.php';
include_once drupal_get_path('module', 'cassie').'/RuleEngine.class.php';
include_once drupal_get_path('module', 'cassie').'/Product.class.php';


$GLOBALS['cassie'] = new Cassie();
$GLOBALS['cassie']->connect();

$GLOBALS['rule'] = new RuleEngine();

$GLOBALS['segments'] = array();


function cassie_init(){


	if (!isset($_COOKIE["location"])){
        	$location = file_get_contents('http://freegeoip.net/json/'.$_SERVER['REMOTE_ADDR']);

	        $jsonIterator = new RecursiveIteratorIterator(
   		     	new RecursiveArrayIterator(json_decode($location, TRUE)),
        		RecursiveIteratorIterator::SELF_FIRST);

        	$arrayJson = array();

	        foreach ($jsonIterator as $key => $val) {
                	$arrayJson[] = $val;
        	}

        	$v4uuid = UUID::v4();
	        //$language = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
        	$language = "fi";
		$ip_address = $arrayJson[0];
        	$time_zone = $arrayJson[7];
	        $country_agent = $arrayJson[2];
        	$region = $arrayJson[4];
        	$city = $arrayJson[5];
		$os = check_user_agent();
		$cookieArray = array($v4uuid, $language, $ip_address, $time_zone, $country_agent, $region, $city, $os);

	        $cookieJson = json_encode($cookieArray, JSON_UNESCAPED_UNICODE);

		$os = check_user_agent();
        	setcookie("location", $cookieJson, time()+3600);

	        $GLOBALS['cassie']->insertUsersSegment($v4uuid, $language, $ip_address, $time_zone, $country_agent, $region, $city, $os);

		$visits = $GLOBALS['cassie']->checkForPromotion($v4uuid);
        	$GLOBALS['segments'] = $GLOBALS['rule']->init($visits, $os, $country_agent);


		return $cookieArray;
	}

	$cookie = get_cookie();
        $visits = $GLOBALS['cassie']->checkForPromotion($cookie[0]);
	$GLOBALS['segments'] = $GLOBALS['rule']->init($visits, check_user_agent(), $GLOBALS['cassie']->getUserCountry($cookie[0]));

	check_uuid();
	drupal_add_js(drupal_get_path('module', 'cassie') . '/Timer.js');
	//time_logger();
}

function launch_help(){

	if ($_SESSION["launchHelp"] == true){

	}
}


function cassie_help($path, $args) {
  if ($path == 'admin/help#cassie') {
    return t('To use this module, go to the block page and turn on the membercount block.');
  }
}

function cassie_menu() {

  $items['timer'] = array(
    'title' => 'Timer',
    'page callback' => 'time_logger',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
    'access callback' => TRUE,
  );

  $items['pants'] = array(
    'title' => 'Housut',
    'page callback' => 'pants_page',
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  $items['jackets'] = array(
    'title' => 'Takit',
    'page callback' => 'jackets_page',
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  $items['phones'] = array(
    'title' => 'Puhelimet',
    'page callback' => 'phones_page',
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  $items['manage'] = array(
    'title' => 'Admin UI',
    'page callback' => 'admin_page',
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  $items['add'] = array(
   'title' => 'Add product',
   'page callback' => 'drupal_get_form',
   'page arguments' => array('add_product_page'),
   'access arguments' => array('add_product_page'),
   'access callback' => TRUE,
   'type' => MENU_CALLBACK,
  );

  $items['update'] = array(
   'title' => 'Update product',
   'page callback' => 'update_product_page',
   'access callback' => TRUE,
   'type' => MENU_CALLBACK,
  );

  $items['delete'] = array(
   'title' => 'Delete product',
   'page callback' => 'delete_product_page',
   'access callback' => TRUE,
   'type' => MENU_CALLBACK,
  );

  $items['rules'] = array(
   'title' => 'Change rules',
   'page callback' => 'drupal_get_form',
   'page arguments' => array('change_rules_page'),
   'access arguments' => array('change_rules_page'),
   'access callback' => TRUE,
   'type' => MENU_CALLBACK,
  );

  $items['pants/%'] = array(
   'page callback' => 'pants_details',
   'access callback' => TRUE,
  );

  $items['jackets/%'] = array(
   'page callback' => 'jackets_details',
   'access callback' => TRUE,
  );

  $items['phones/%'] = array(
   'page callback' => 'phones_details',
   'access callback' => TRUE,
  );

  $items['update/%'] = array(
   'access callback' => TRUE,
   'page callback' => 'drupal_get_form',
   'page arguments' => array('update_product_details_page'),
   'access arguments' => array('update_product_details_page'),
  );

 return $items;
}


function cassie_block_info() {
  $blocks['language'] = array(
    'info' => t('language'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );

  $blocks['ad'] = array(
    'info' => t('ad'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  $blocks['adHeader'] = array(
    'info' => t('adHeader'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

function cassie_block_view($delta = '') {

   switch($delta){
     case 'ad':
	$advert = $GLOBALS['segments']['advertSide'];
	$result = $GLOBALS['cassie']->selectAd($advert);
	$row = $result->first();
        $block['content'] = "<img id='adImage' src='" . $row['image_link'] . "'/>";
     return $block;

     case 'language':
	$block['subject'] = t("Language");

	$block['content'] = "<form method='POST' action=''><div id='fi'><input type='submit' id='fiFlag' class='flags' name='fi' value=''></div>".
	"<div id='ru'><input type='submit' id='ruFlag' class='flags' name='ru' value=''></div></form>";
	select_language();

     return $block;

     case 'adHeader':
	$advert = $GLOBALS['segments']['advertTop'];
	$result = $GLOBALS['cassie']->selectAd($advert);
	$row = $result->first();
	$block['content'] = "<img id='adImageHeader' src='" . $row['image_link']  . "'/>";
     return $block;

  }

}

function select_language(){
	$langs = language_list();
	if (isset($_POST['fi'])) {
		$cookie = get_cookie();
		$cookieArray = array($cookie[0], "fi", $cookie[2], $cookie[3], $cookie[4], $cookie[5], $cookie[6], $cookie[7]);
		$cookieJson = json_encode($cookieArray, JSON_UNESCAPED_UNICODE);

                setcookie("location", $cookieJson, time()+3600);
		$langcode = 'fi';
		variable_set('language_default', $langs[$langcode]);
		header("Refresh:0");
        }
        if (isset($_POST['ru'])) {
		$cookie = get_cookie();
                $cookieArray = array($cookie[0], "ru", $cookie[2], $cookie[3], $cookie[4], $cookie[5], $cookie[6], $cookie[7]);
                $cookieJson = json_encode($cookieArray, JSON_UNESCAPED_UNICODE);

                setcookie("location", $cookieJson, time()+3600);
		$langcode = 'ru';
		variable_set('language_default', $langs[$langcode]);
         	header("Refresh:0");
	}

}

function get_cookie(){
	if (isset($_COOKIE['location'])){
		$cookie = $_COOKIE['location'];
        	$cookie = stripslashes($cookie);
        	$cookieArray = json_decode($cookie, true);
		return $cookieArray;
	} else{
		return cassie_init();
	}
}

function sortByPriceAsc($a, $b){
	if ($a->price == $b->price) {
        return 0;
    }
    return ($a->price < $b->price) ? -1 : 1;
}

function sortByPriceDesc($a, $b){
	if ($a->price == $b->price) {
        return 0;
    }
    return ($a->price > $b->price) ? -1 : 1;
}

function sortByCountry($a, $b){
        $cookie = get_cookie();
	$country_agent = $cookie[4];
	if ($a->country_segment == $b->country_segment) {
        	return 0;
	}
    return ($a->country_segment == $country_agent) ? -1 : 1;
}


function get_products(){
	if (isset($_COOKIE['location'])){
		$cookie = get_cookie();
	}

	$userAgent = check_user_agent();
	$address = "http://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";

	$page = substr(strrchr($address, '/'), 1);
	$test = true;
	$cookie = get_cookie();

	$output = "<div>";
	$i = 0;
	$highpriority = false;
	$cookie = get_cookie();
	$visits = $GLOBALS['cassie']->checkForPromotion($cookie[0]);
	$segments = $GLOBALS['rule']->init($visits, 1, $GLOBALS['cassie']->getUserCountry($cookie[0]));
	$highpriority = $segments['priorityHigh'];
	/*
	if ($cookie[1] == "fi"){
		$result = $GLOBALS['cassie']->getProductsFi($page, $highpriority);
	}else{
		$result = $GLOBALS['cassie']->getProductsRu($page, $highpriority);
	}
	$sort = sortItems();

	$selectedPriceAsc = "";
	$selectedPriceDesc = "";

	if ($sort == ''){
		usort($result, "sortByCountry");
		//$selectedPriceAsc = 'selected';
	}

	if ($sort == 'priceAsc'){
		usort($result, "sortByPriceAsc");
		$selectedPriceAsc = 'selected';
	}

	if ($sort == 'priceDesc'){
                usort($result, "sortByPriceDesc");
		$selectedPriceDesc = 'selected';
        }

	$output .= "<form method='post' action=''><select name='sort' id='sort'>";

        $output .= "<option " . $selectedPriceAsc . " value='priceAsc'>Halvimmasta kalleimpaan</option>".
        	   "<option " . $selectedPriceDesc . " value='priceDesc'>Kalleimmasta halvimpaan</option>".
		   "<input type='submit' class='setSort' value='Select sort' /></select></form><br><br>";

	foreach ($result as $row) {
                $output .= "<a href='". $page . "/" . $row->product_id . "'><div class='productContainer'><div class='product'><img id='productImage$i' class='productImage' src='"
        	. $row->image_link . "'/><p id='productName'>" . $row->product_id . "</p><p id='productPrice'>" . $row->price .
       		" &#x20ac;</p><p id='productDescription'>" . $row->description . "</div></div></a>";
       		$i++;
	}*/

	$selectSort = "";
        $lowToHigh = "";
        $highToLow = "";

        if ($cookie[1] == "fi"){
                $selectSort = "Lajittele";
                $lowToHigh = "Halvimmasta kalleimpaan";
                $highToLow = "Kalleimmasta halvimpaan";
                $result = $GLOBALS['cassie']->getProductsFi($page, $highpriority);
        }else{
                $selectSort = "сортировать по";
                $lowToHigh = "от низкого до высокого";
                $highToLow = "от высокой к низкой";
                $result = $GLOBALS['cassie']->getProductsRu($page, $highpriority);
        }
        $sort = sortItems();

        $selectedPriceAsc = "";
        $selectedPriceDesc = "";

        if ($sort == ''){
                usort($result, "sortByCountry");
                //$selectedPriceAsc = 'selected';
        }

        if ($sort == 'priceAsc'){
                usort($result, "sortByPriceAsc");
                $selectedPriceAsc = 'selected';
        }

        if ($sort == 'priceDesc'){
                usort($result, "sortByPriceDesc");
                $selectedPriceDesc = 'selected';
        }

        $output .= "<form method='post' action=''><select name='sort' id='sort'>";

        $output .= "<option " . $selectedPriceAsc . " value='priceAsc'>" . $lowToHigh  . "</option>".
                   "<option " . $selectedPriceDesc . " value='priceDesc'>" . $highToLow  ."</option>".
                   "<input type='submit' class='setSort' value='" . $selectSort . "' /></select></form><br><br>";

        foreach ($result as $row) {
                $output .= "<a href='". $page . "/" . $row->product_id . "'><div class='productContainer'><div class='product'><img id='productImage$i' class='productImage' src='"
                . $row->image_link . "'/><p id='productName'>" . $row->product_id . "</p><p id='productPrice'>" . $row->price .
                " &#x20ac;</p><p id='productDescription'>" . $row->description . "</div></div></a>";
                $i++;
        }

        $output .= "</div>";

	return $output;

}

function sortItems(){
	if (!isset($_SESSION['sort'])){
		$_SESSION['sort'] = "";
	}

	if (isset($_POST['sort'])){
		$_SESSION['sort'] = $_POST['sort'];
	}
	return $_SESSION['sort'];
}


function getStringBetween($str,$from,$to){
    $sub = substr($str, strpos($str,$from)+strlen($from),strlen($str));
    return substr($sub,0,strpos($sub,$to));
}

function check_user_agent(){

 	$userAgent = $_SERVER['HTTP_USER_AGENT'];

	$from = "(";
	$to = ")";

	$os = getStringBetween($userAgent, $from, $to);

	return $os;
}

function change_title($value_fi, $value_ru){
        $cookie = get_cookie();

        if ($cookie[1] == "fi"){
                drupal_set_title($value_fi);
        }else{
                drupal_set_title($value_ru);
        }
}

function phones_page(){
	updateCounter();
	change_title("Puhelimet", "Телефоны");
	return get_products();
}

function pants_page() {
	updateCounter();
	change_title("Housut", "брюки");

	//return get_products();
	return get_products();
}

function jackets_page(){
	updateCounter();
	change_title("Takit", "Куртки");
	return get_products();
}


function get_product_details(){

        $address = "http://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";

        $pageUnparsed = explode("/", $address, 3);
        $pageWithSubpage = substr($pageUnparsed[2], strpos($pageUnparsed[2], "/") + 1);
        $page = explode("/", $pageWithSubpage, 2);

        $productWithSpecials = substr(strrchr($address, '/'), 1);
	      $product = str_replace("%20"," ", $productWithSpecials);
	      $os = "Android";

        $result = $GLOBALS['cassie']->getProductInfo($page[0], $product);
        $cookie = get_cookie();
        $row = $result->first();
        if ($cookie[1] == "fi"){
          $description = $row['description_fi'];
        }else{
          $description = $row['description_ru'];
        }

	drupal_set_title($row['product_id']);
        $output = "<p id='productDetailPrice'>" . $row['price'] . " &#x20ac;</p><p id='productDetailDescription'>"
	. $description . "</p><img id='productDetailImage' src='" . $row['image_link'] .
  "'><form method='POST' action=''><br><button type='submit' id='addToCart'".
	" class='cart' name='cart'>Add to cart <i class='fa fa-arrow-right fa-lg'></i><i class='fa fa-shopping-cart fa-lg'></i></button></form>";
	add_to_cart();

        return $output;
}

function check_uuid(){
	if (!isset($_SESSION['uuid'])){
		$_SESSION['uuid'] = UUID::v4();
	}
}

function add_to_cart(){
	if (isset($_POST['cart'])){

 		$address = "http://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";

  	$pageUnparsed = explode("/", $address, 3);
  	$pageWithSubpage = substr($pageUnparsed[2], strpos($pageUnparsed[2], "/") + 1);
  	$page = explode("/", $pageWithSubpage, 2);

		$cookie = get_cookie();

		$productWithSpecials = substr(strrchr($address, '/'), 1);
    $product = str_replace("%20"," ", $productWithSpecials);
		$result = $GLOBALS['cassie']->getProductInfo($page[0], $product);
		$row = $result->first();
		check_uuid();
		$GLOBALS['cassie']->cartProduct($_SESSION['uuid'], $product, $row['price'], $row['image_link']);


		if (!isset($_COOKIE['count'])){
			setcookie("count", 1, time()+3600, '/');
		}else{
			$count = $_COOKIE['count'];
			setcookie("count", $count + 1, time()+3600, '/');
		}
		drupal_set_message($product . " added to cart.");
	}
}


function phones_details(){
	updateCounter();
	return get_product_details();
}

function pants_details(){
        return get_product_details();
}

function jackets_details(){
    	return get_product_details();
}

function updateCounter(){

	$address = "http://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";

        $pageWasRefreshed = isset($_SERVER['HTTP_CACHE_CONTROL']) && $_SERVER['HTTP_CACHE_CONTROL'] === 'max-age=0';

        $pageWithSpecials = substr(strrchr($address, '/'), 1);

        $page = str_replace("%20"," ", $pageWithSpecials);

	if (isset($_COOKIE['location'])){  
		$cookie = get_cookie();

//        if ($pageWasRefreshed ) {
                $GLOBALS['cassie']->updateCounter($page);
		$GLOBALS['cassie']->updateVisits($cookie[0] , $page);
  //      }

	}
}

function admin_page(){
	if (user_access('administer')) {

		$output = "<span>" . l("Add product", "/add") . "</span><br><span>" . l("Update product", "/update") . "</span><br><span>" . l("Delete product", "/delete") . "</span>".
		"<br><span>" . l("Change rules", "/rules");
		return $output;
	}else{
		drupal_set_title("Access denied");
		return "";
	}
}
function change_rules_page($form, &$form_state){
        if (user_access('administer')) {

		$priority = $GLOBALS['cassie']->getRule("priority");
		$country = $GLOBALS['cassie']->getRule("country");

                $form['priority'] = array(
                        '#type' => 'radios',
			'#default_value' => $priority,
                        '#title' => 'Show highpriority products',
                        '#attributes' => array('class' => array('hidevaluetext')),
                        '#options' =>  array('1'=>t('True'), '0'=>t('False')),
                );

		$form['country'] = array(
                        '#type' => 'radios',
			'#default_value' => $country,
                        '#title' => 'Advertiment by country',
                        '#attributes' => array('class' => array('hidevaluetext')),
                        '#options' =>  array('1'=>t('True'), '0'=>t('False')),
                );

                $form['submit'] = array(
                        '#type' => 'submit',
                        '#value' => t('Save rules'),
                        '#attributes' => array('id' => 'updateButton'),
                );
                return $form;

        }else{
                drupal_set_title("Access denied");
                return $form;
        }

}

function change_rules_page_submit($form, &$form_state){
	$rules = array(
          'priority' => $form_state['values']['priority'],
	  'country' => $form_state['values']['country'],
          'status' => 1,
        );

	if ($rules['priority'] == 0){
		$GLOBALS['cassie']->disableRule("priority");
	}else{
		$GLOBALS['cassie']->enableRule("priority");
	}

	if ($rules['country'] == 0){
                $GLOBALS['cassie']->disableRule("country");
        }else{
                $GLOBALS['cassie']->enableRule("country");
        }
}

function add_product_page($form, &$form_state){
	if (user_access('administer')) {

		$result = $GLOBALS['cassie']->getCategories();
		$array = array();
		foreach ($result as $row){
			$array[] = array($row['category_id'] => $row['category_id']);
			//$array[] = $row['category_id'];
		}
		sort($array);

		foreach($result as $row){
		$form['category_options'] = array(
                '#type' => 'value',
                '#value' => array($row['category_id'] => t($row['category_id']))
                );
		}

		$form['country_options'] = array(
  		'#type' => 'value',
 		'#value' => array('Finland' => t('Finland'),
                    'Russia' => t('Russia'),
                    'United Stated' => t('United States'))
		);

	       	$form['category'] = array(
                	'#type' => 'select',
                	'#title' => 'Category',
                	'#attributes' => array('class' => array('hidevaluetext')),
			'#options' => array_values($array),
        	);
        	$form['product'] = array(
                	'#type' => 'textfield',
                	'#title' => 'Product',
                	'#attributes' => array('class' => array('hidevaluetext')),
        	);
		$form['country'] = array(
                        '#type' => 'select',
                        '#title' => 'Country',
                        '#attributes' => array('class' => array('hidevaluetext')),
                        '#options' => $form['country_options']['#value'],
                );
		$form['image_link'] = array(
                	'#type' => 'textfield',
                	'#title' => 'Imagelink',
                	'#attributes' => array('class' => array('hidevaluetext')),
        	);
 		$form['priority'] = array(
                	'#type' => 'radios',
                	'#title' => 'Priority',
			'#default_value' => '0',
                	'#attributes' => array('class' => array('hidevaluetext')),
			'#options' =>  array('1'=>t('True'), '0'=>t('False')),
        	);
 		$form['amount'] = array(
                	'#type' => 'textfield',
                	'#title' => 'Amount',
                	'#attributes' => array('class' => array('hidevaluetext')),
        	);
 		$form['price'] = array(
                	'#type' => 'textfield',
                	'#title' => 'Price',
                	'#attributes' => array('class' => array('hidevaluetext')),
        	);
 		$form['description_fi'] = array(
                	'#type' => 'textfield',
                	'#title' => 'Description (Finnish)',
        	        '#attributes' => array('class' => array('hidevaluetext')),
	        );

		$form['description_ru'] = array(
                        '#type' => 'textfield',
                        '#title' => 'Description (Russian)',
                        '#attributes' => array('class' => array('hidevaluetext')),
                );

       	 	$form['submit'] = array(
                	'#type' => 'submit',
                	'#value' => t('Add a new product'),
                	'#attributes' => array('id' => 'addButton'),
        	);
        	return $form;

	}else{
                drupal_set_title("Access denied");
		return $form;
        }

}

function add_product_page_submit($form, &$form_state) {
        $newproduct = array(
          'category' => $form_state['values']['category'],
          'product' => $form_state['values']['product'],
	  'country' => $form_state['values']['country'],
          'image_link' => $form_state['values']['image_link'],
          'priority' => $form_state['values']['priority'],
          'amount' => $form_state['values']['amount'],
	  'price' => $form_state['values']['price'],
	  'description_fi' => $form_state['values']['description_fi'],
	  'description_ru' => $form_state['values']['description_ru'],
          'status' => 1,
        );

	try{
		if ($newproduct['product'] !== "" && $newproduct['price'] !== "" &&
                        $newproduct['amount'] !== "" &&  $newproduct['description_fi'] !== "" && $newproduct['description_ru'] !== "" && $newproduct['image_link'] !== ""){

			$GLOBALS['cassie']->addProduct($newproduct['category'], $newproduct['product'], $newproduct['price'],
				$newproduct['amount'], $newproduct['description_fi'], $newproduct['description_ru'], $newproduct['image_link'], $newproduct['priority'], $newproduct['country']);
			$form_state['rebuild'] = TRUE;
			drupal_set_message("Product " . $newproduct['product'] . " added.");
		}else{
			drupal_set_message("Fill fields first.", 'error');
			$form_state['redirect'] = FALSE;
		}

	}catch(Exception $e){
		drupal_set_message($e->getMessage(), 'error');
		$form_state['redirect'] = FALSE;
	}
}

function update_product_page(){
	if (user_access('administer')) {
		$resultCategory = $GLOBALS['cassie']->getCategories();

		$output = "<form method='post' action=''><select name='cat' id='cat'>";

   		 		foreach($resultCategory as $row) {
				     $selected = "";
				     if (isset($_POST['cat'])){
				     	if ($row['category_id'] == $_POST['cat']){
					  $selected = 'selected';
				     	}
				     }elseif(isset($_SESSION['cat']) && $row['category_id'] == $_SESSION['cat']){
                                          $selected = 'selected';
                                     }
				     $output .= "<option " . $selected . " value='" . $row['category_id'] .
				     "'>" .  $row['category_id'] . "</option>";
    				}
		$output .= "<input type='submit' class='searchCat' value='Select a category' /></select></form>";

		if (isset($_SESSION['cat'])){
                	$result = $GLOBALS['cassie']->getProducts(select_category());
                	$output .= "<table>";
                	foreach ($result as $row){
                        	 $output .= "<tr><td><img id='productImage' src='" . $row['image_link'] . "'/></td><td>" . $row['product_id'] . "</td>" .
                         	"</td><td><form method='POST' action=''><input type='hidden' name='category' value='" . $row['category_id']  . "'>" .
			 	"<input type='hidden' name='product' value='" . $row['product_id']  . "'>" .
				"<input type='hidden' name='country' value='" . $row['country_segment']  . "'>" .
			 	"<input type='hidden' name='price' value='" . $row['price']  . "'>" .
 			 	"<input type='hidden' name='amount' value='" . $row['amount']  . "'>" .
			 	"<input type='hidden' name='description_fi' value='" . $row['description_fi']  . "'>" .
				"<input type='hidden' name='description_ru' value='" . $row['description_ru']  . "'>" .
			 	"<input type='hidden' name='image_link' value='" . $row['image_link']  . "'>" .
			 	"<input type='hidden' name='priority' value='" . $row['high_priority_segment']  . "'>" .
                         	"<button type='submit' id='update" . $row['product_id'] . "' name='updateProduct' class='updateProduct'><i class='fa fa-pencil'></i></button></form></td></tr>";
                	}
                	$output .= "</table>";
		}else{
			select_category();
		}

		update_product();
		return $output;

	}else{
		drupal_set_title("Access denied");
		return "";
	}
}

function productSessionArray($category, $product, $price, $amount, $description_fi, $description_ru, $image_link, $priority, $country){
	$updateProductArray = array($category, $product, $price, $amount, $description_fi, $description_ru, $image_link, $priority, $country);

        $productJson = json_encode($updateProductArray, JSON_UNESCAPED_UNICODE);
        $_SESSION['updateProduct'] = $productJson;
}

function select_category(){
	if (!isset($_SESSION['cat'])){
		$resultCategory = $GLOBALS['cassie']->getCategories();
		$_SESSION['cat'] = $resultCategory->first();
	}

	if (isset($_POST['cat'])){
		$_SESSION['cat'] = $_POST['cat'];
	}

	return $_SESSION['cat'];
}

function update_product(){
	if (isset($_POST['updateProduct'])){
		productSessionArray($_POST['category'], $_POST['product'], $_POST['price'], $_POST['amount'], $_POST['description_fi'], $_POST['description_ru'],
		$_POST['image_link'], $_POST['priority'], $_POST['country']);
		header("Location: /update/" . $_POST['product']);
        }
}

function update_product_details_page($form, &$form_state){

	$product = $_SESSION['updateProduct'];
        $product = stripslashes($product);
        $productArray = json_decode($product, true);
	drupal_set_title("Update product " . $productArray[1]);

	if (user_access('administer')) {
		$array;
		$result = $GLOBALS['cassie']->getCategories();
                foreach ($result as $row){
                        $array[] = array($row['category_id'] => $row['category_id']);
                }

		$form['country_options'] = array(
                '#type' => 'value',
                '#value' => array('Finland' => t('Finland'),
                    'Russia' => t('Russia'),
                    'United Stated' => t('United States'))
                );

		$form['category_old'] = array(
                        '#type' => 'hidden',
                        '#title' => 'Category',
                        '#value' => $productArray[0],
                        '#attributes' => array('class' => array('hidevaluetext')),
                );
                $form['product_old'] = array(
                        '#type' => 'hidden',
                        '#title' => 'Product',
                        '#value' => $productArray[1],
                        '#attributes' => array('class' => array('hidevaluetext')),
                );

                $form['category'] = array(
                        '#type' => 'select',
                        '#title' => 'Category',
			'#default_value' => $productArray[0],
			'#options' => array_values($array),
                        '#attributes' => array('class' => array('hidevaluetext')),
                );
                $form['product'] = array(
                        '#type' => 'textfield',
                        '#title' => 'Product',
			'#default_value' => $productArray[1],
                        '#attributes' => array('class' => array('hidevaluetext')),
                );
		$form['country'] = array(
                        '#type' => 'select',
                        '#title' => 'Country',
			'#default_value' => $productArray[8],
                        '#attributes' => array('class' => array('hidevaluetext')),
                        '#options' => $form['country_options']['#value'],
                );
                $form['image_link'] = array(
                        '#type' => 'textfield',
                        '#title' => 'Imagelink',
			'#default_value' => $productArray[6],
                        '#attributes' => array('class' => array('hidevaluetext')),
                );
                $form['priority'] = array(
                        '#type' => 'radios',
                        '#title' => 'Priority',
			'#default_value' => $productArray[7],
                        '#attributes' => array('class' => array('hidevaluetext')),
                        '#options' =>  array('1'=>t('True'), '0'=>t('False')),
                );
                $form['amount'] = array(
                        '#type' => 'textfield',
                        '#title' => 'Amount',
			'#default_value' => $productArray[3],
                        '#attributes' => array('class' => array('hidevaluetext')),
                );
                $form['price'] = array(
                        '#type' => 'textfield',
                        '#title' => 'Price',
			'#default_value' => $productArray[2],
                        '#attributes' => array('class' => array('hidevaluetext')),
                );
		$form['description_fi'] = array(
                        '#type' => 'textfield',
                        '#title' => 'Description (Finnish)',
			'#default_value' => $productArray[4],
                        '#attributes' => array('class' => array('hidevaluetext')),
                );

                $form['description_ru'] = array(
                        '#type' => 'textfield',
                        '#title' => 'Description (Russian)',
			'#default_value' => $productArray[5],
                        '#attributes' => array('class' => array('hidevaluetext')),
                );
                $form['submit'] = array(
                        '#type' => 'submit',
                        '#value' => t('Update product'),
                        '#attributes' => array('id' => 'updateProduct'),
                );

                return $form;

        }else{
                drupal_set_title("Access denied");
                $output = "You are not authorised to access this page";
                return $form;
	}

}

function update_product_details_page_submit($form, &$form_state){

	$updateProduct = array(
	  'category_old' => $form_state['values']['category_old'],
          'product_old' => $form_state['values']['product_old'],

	  'category' => $form_state['values']['category'],
          'product' => $form_state['values']['product'],
	  'country' => $form_state['values']['country'],
          'image_link' => $form_state['values']['image_link'],
          'priority' => $form_state['values']['priority'],
          'amount' => $form_state['values']['amount'],
          'price' => $form_state['values']['price'],
	  'description_fi' => $form_state['values']['description_fi'],
          'description_ru' => $form_state['values']['description_ru'],
          'status' => 1,
        );

	$actual_link = "http://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";

	try{
                if ($updateProduct['product'] !== "" && $updateProduct['price'] !== "" &&
                        $updateProduct['amount'] !== "" &&  $updateProduct['description_fi'] !== "" && $updateProduct['description_ru'] !== "" && $updateProduct['image_link'] !== ""){
        		$GLOBALS['cassie']->updateProduct($updateProduct['category_old'], $updateProduct['product_old'], $updateProduct['category'], $updateProduct['product'],
				$updateProduct['price'], $updateProduct['amount'], $updateProduct['description_fi'], $updateProduct['description_ru'], $updateProduct['image_link'],
				$updateProduct['priority'], $updateProduct['country']);

				productSessionArray($updateProduct['category'], $updateProduct['product'],
       				$updateProduct['price'], $updateProduct['amount'], $updateProduct['description_fi'], $updateProduct['description_ru'],
				$updateProduct['image_link'], $updateProduct['priority'], $updateProduct['country']);
				$form_state['redirect'] = $actual_link;
				drupal_set_message($updateProduct['product'] . " updated.");
		}else{
                        drupal_set_message("Fill fields first.", 'error');
                        $form_state['redirect'] = FALSE;
                }

        }catch(Exception $e){
                drupal_set_message($e->getMessage(), 'error');
                $form_state['redirect'] = FALSE;
        }
}

function delete_product_page(){
	if (user_access('administer')){

		$resultCategory = $GLOBALS['cassie']->getCategories();

		$output = "<form method='post' action=''><select name='cat' id='cat'>";
                                foreach($resultCategory as $row) {
				     $selected = "";

				     if (isset($_POST['cat'])){
                                        if ($row['category_id'] == $_POST['cat']){
                                          $selected = 'selected';
                                        }
                                     }elseif(isset($_SESSION['cat']) && $row['category_id'] == $_SESSION['cat']){
                                          $selected = 'selected';
                                     }

                                     $output .= "<option " . $selected  . "  value='" . $row['category_id'] . "'>" .  $row['category_id'] . "</option>";
                                }
                $output .= "<input type='submit' class='searchCat' value='Select a category' /></select></form>";

                if (isset($_SESSION['cat'])){

			$result = $GLOBALS['cassie']->getProductsFi(select_category(), 1);

			$output .= "<table>";
			foreach ($result as $row){
               		 	$output .= "<tr><td><img id='productImage' src='" . $row->image_link . "'/></td><td>" . $row->product_id . "</td>" .
                	 	"</td><td><form method='POST' onsubmit='return confirm('Are you sure you want to submit this form?');'" .
			 	"action=''><input type='hidden' name='category' value='". $row->category_id . "' ><input type='hidden' name='product' value='" . $row->product_id .
                		 "' ><button type='submit' id='delete" . $row->product_id . "' name='deleteProduct'class='deleteProduct' ><i class='fa fa-times'></i></button></form></td></tr>";
        		}
			$output .= "</table>";
		}else{
			select_category();
		}

		delete_product();

		return $output;
	}else{
		drupal_set_title("Access denied");
                return "";
	}
}

function delete_product(){
	if (isset($_POST['deleteProduct'])){
                $GLOBALS['cassie']->deleteProduct($_POST['category'], $_POST['product']);

                header("Refresh:0");
                drupal_set_message($_POST['product'] . " deleted from the store.");
        }

}


function time_logger($test){


        //drupal_add_js(drupal_get_path('module', 'cassie') . '/Timer.js');
	//$test = $_GET['time'];
	//echo $test;

	if (!isset($_SESSION["timeListIndex"])){
		$_SESSION["timeListIndex"] = 1;
	}

	$updated = false;

        if ($_SESSION["timeListIndex"] == 5 && $updated == false){
                //echo "<script>document.getElementById('debug').value = 'in 5. if';</script>";
                $_SESSION["timeListIndex"] = 1;
                $_SESSION["page5_time"] = $_GET["time"];
                $_SESSION["tableFull"] = true;
                $updated = true;
                calcTotalTime();
        }
        if ($_SESSION["timeListIndex"] == 4 && $updated == false){
                //echo "<script>document.getElementById('debug').value = 'in 4. if';</script>";
                $_SESSION["timeListIndex"] = 5;
                $_SESSION["page4_time"] = $_GET["time"];
                $updated = true;
                calcTotalTime();
        }
        if ($_SESSION["timeListIndex"] == 3 && $updated == false){
                //echo "<script>document.getElementById('debug').value = 'in 3. if';</script>";
                $_SESSION["timeListIndex"] = 4;
                $_SESSION["page3_time"] = $_GET["time"];
                $updated = true;
                calcTotalTime();
        }
	if ($_SESSION["timeListIndex"] == 2 && $updated == false){
                //echo "<script>document.getElementById('debug').value = 'in 2. if';</script>";
                $_SESSION["timeListIndex"] = 3;
                $_SESSION["page2_time"] = $_GET["time"];
                $updated = true;
                calcTotalTime();
        }
        if ($_SESSION["timeListIndex"] == 1  && $updated == false || $_SESSION["timeListIndex"] == null){
                //echo "<script>document.getElementById('debug').value = 'in 1. if';</script>";
                $_SESSION["timeListIndex"] = 2;
                $_SESSION["page1_time"] = $test;
                calcTotalTime();
        }

	$updated = false;

	return "dsfsd";
}


function calcTotalTime(){
                if($_SESSION["tableFull"] == true){
                        $totalTime = $_SESSION["page1_time"] + $_SESSION["page2_time"] + $_SESSION["page3_time"] + $_SESSION["page4_time"] + $_SESSION["page5_time"];
                        $_SESSION["totalTime"] = $totalTime;

                        if(($totalTime/1000) <= 25){
                                $_SESSION["launchHelp"] = true;
                        } else {
                                $_SESSION["launchHelp"] = false;
                        }
                }
        }
