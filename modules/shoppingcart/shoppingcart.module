<?php

include_once drupal_get_path('module', 'cassie').'/Cassie.class.php';

$GLOBALS['cassie'] = new Cassie();
$GLOBALS['cassie']->connect();


function shoppingcart_menu(){
  $items['cart'] = array(
    'title' => 'Ostoskori',
    'page callback' => 'cart_page',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  $items['bought'] = array(
    'title' => 'Ostetut tuotteet',
    'page callback' => 'bought_products',
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

return $items;

}


function shoppingcart_block_info() {
  $blocks['cart'] = array(
    'info' => t('cart'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}


function shoppingcart_block_view($delta = '') {

   switch($delta){
     case 'cart':
        $block['subject'] = t("Shopping cart");
	check_uuid();
	if (isset($_SESSION['logged_as'])){
		$result = $GLOBALS['cassie']->getRegisteredAmount($_SESSION['logged_as']);
	}else{
		$result = $GLOBALS['cassie']->getAmount($_SESSION['uuid']);
	}

	if ($result > 0){
	       	$block['content'] = "<a href='/cart'><div id='shoppingCartContainer'><i class='fa fa-shopping-cart fa-3x'></i><span id='count'>" . $result . "</span></div></a>";
	}
	else{
		$block['content'] = "<a href='/cart'><div id='shoppingCartContainer'><i class='fa fa-shopping-cart fa-3x'></i><span id='count'>0</span></div></a>";
	}
	return $block;
  }

}

function bought_products(){
	check_uuid();
        change_title("Ostetut tuotteet", "закупленные продукты");

        if (isset($_SESSION['logged_as'])){
                $result = $GLOBALS['cassie']->getPurchases($_SESSION['logged_as']);

        $output = "<table>";
        $price = 0;
        $amount = 0;
        $pcs = set_text("kpl", " ^  ^  ^   ");
        foreach ($result as $row){
                $output .= "<tr><td><img id='productImage' src='" . $row['image_link'] . "'/></td><td>" . $row['product_id'] .
                 "</td><td>" . $row['price'] . " &#x20ac;</td><td>" . $row['amount'].
                 " " . $pcs . "</td><td></td></tr>";
                $price += $row['price'] * $row['amount'];
                $amount += $row['amount'];
        }
        $output .= "</table>";
        $display = "none;";

        if ($amount > 0){
                $display = "default;";
        }

        $totalPrice = set_text("Kokonaishinta", "     ^    ^   ^       ");
        $itemsInCart = set_text("Ostetut tuotteet", "закупленные продукты");

        $output .= "<div id='total'>" . $totalPrice . ": " . $price . " &#x20ac; <br>" . $itemsInCart . ": " . $amount . " " . $pcs . "</div>";
	}else{
		$registerFirst = set_text("Rekisteröidy ensin.", "Регистрация в первую очередь.");
		$output = $registerFirst;
	}

        return $output;
}


function cart_page(){
	check_uuid();
	change_title("Ostoskori", "корзина для покупок");
	if (isset($_SESSION['logged_as'])){
		$result = $GLOBALS['cassie']->getRegisteredCartProducts($_SESSION['logged_as']);
	}else{
		$result = $GLOBALS['cassie']->getCartProducts($_SESSION['uuid']);
	}

	$output = "<table>";
	$price = 0;
	$amount = 0;
	$pcs = set_text("kpl", "штук");
	foreach ($result as $row){
		$output .= "<tr><td><img id='productImage' src='" . $row['image_link'] . "'/></td><td>" . $row['product_id'] .
		 "</td><td>" . $row['price'] . " &#x20ac;</td><td>" . $row['amount'].
		 " " . $pcs . "</td><td><form method='POST' action=''><input type='hidden' name='product' value='" . $row['product_id'] .
		 "' ><button type='submit' id='deleteFromCart' name='deleteProduct'><i class='fa fa-times'></i></button></form></td></tr>";
        	$price += $row['price'] * $row['amount'];
		$amount += $row['amount'];
	}
	$output .= "</table>";
	delete_product_from_cart();
	$display = "none;";
	$info = "";

	if ($amount > 0){
		$display = "default;";
	}

	$checkout = set_text("Osta", "купить");
	$totalPrice = set_text("Kokonaishinta", "общая цена");
	$itemsInCart = set_text("Tuotteita ostoskorissa", "Элементы в корзине");

	$output .= "<div id='total'>" . $totalPrice . ": " . $price . " &#x20ac; <br>" . $itemsInCart . ": " . $amount . " " . $pcs . "<br><br><span id='info'>". $info . "</span>" .
		"<form method='POST' action=''><br><button id='checkout' style='display:" .$display . "' type='submit' name='checkout'>" . $checkout . " <i class='fa fa-money fa-lg'></i></button></div>";

	checkout();
	return $output;

}

function delete_product_from_cart(){
	if (isset($_POST['deleteProduct'])){
		if (isset($_SESSION['logged_as'])){
			$GLOBALS['cassie']->removeRegisteredProduct($_SESSION['logged_as'], $_POST['product']);
		}else{
			$GLOBALS['cassie']->removeProduct($_SESSION['uuid'], $_POST['product']);
		}

		$removeCart = set_text("poistettu ostoskorista.", "удален из корзины.");
                drupal_set_message($_POST['product'] . " " . $removeCart);
		header("Refresh:1.5");
	}
}


function checkout(){
 	if (isset($_POST['checkout'])){
		if (isset($_SESSION['logged_as'])){
			$result = $GLOBALS['cassie']->getRegisteredCartProducts($_SESSION['logged_as']);
		}else{
			$result = $GLOBALS['cassie']->getCartProducts($_SESSION['uuid']);
		}

		foreach ($result as $row){
			if (isset($_SESSION['logged_as'])){
				$GLOBALS['cassie']->updateRegisteredCheckout($_SESSION['logged_as'], $row['product_id'], $row['amount'], $row['price'], $row['image_link']);
			}else{
				$GLOBALS['cassie']->updateCheckout($_SESSION['uuid'], $row['product_id'], $row['amount'], $row['price'], $row['image_link']);
			}
		}

		$checkoutSuccess = set_text("Osto onnistui!", "Покупка успеха!");
		drupal_set_message($checkoutSuccess);
		header("Refresh:1.5");
	}
}
