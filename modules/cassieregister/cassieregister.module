<?php

include_once drupal_get_path('module', 'cassie').'/Cassie.class.php';

$GLOBALS['cassie'] = new Cassie();
$GLOBALS['cassie']->connect();


function cassieregister_menu(){
	$items['registration'] = array(
    	  'title' => 'Rekisteröidy',
    	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('cassieregister_registration_page'),
	  'access arguments' => array('cassieregister_registration_page'),
	  'access callback' => TRUE,
	  'type' => MENU_CALLBACK,
	);

	$items['login'] = array(
	  'title' => 'Kirjaudu sisään',
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('cassieregister_login_page'),
	  'access arguments' => array('cassieregister_login_page'),
	  'access callback' => TRUE,
	  'type' => MENU_CALLBACK,
	);

	return $items;
}


function cassieregister_block_info() {
  $blocks['logged'] = array(
    'info' => t('logged'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );

  return $blocks;
}

function cassieregister_block_view($delta = '') {

   switch($delta){
     case 'logged':
	$hello = set_text("Hei", "привет");
	$logout = set_text("Poistu", "Выйти");
	if (isset($_SESSION['logged_as'])){
        	$block['content'] = "<form method='post' action=''><div id='user'>". $hello . " " . $_SESSION['logged_as'] .
		"!<input type='submit' id='logout' name='logout' value=" . $logout . "></div></form>";
	}
	else{
		$block['content'] = "";
	}
	log_out();
     return $block;
  }

}

function log_out(){

	if (isset($_POST['logout'])){
		unset($_SESSION['logged_as']);
		header("Location: /");
	}

}

function cassieregister_login_page($form, &$form_state){
	change_title("Kirjaudu sisään", "войти");

	$array = change_labels();
        $form['name'] = array(
                '#type' => 'textfield',
                '#title' => $array[0],
                '#attributes' => array('class' => array('hidevaluetext')),
        );
        $form['pass'] = array(
                '#type' => 'password',
                '#title' => $array[1],
                '#attributes' => array('class' => array('hidevaluetext')),
        );

        $form['submit'] = array(
                '#type' => 'submit',
                '#value' => t($array[2]),
		'#attributes' => array('id' => 'loginButton'),
        );

        return $form;

}

function cassieregister_login_page_submit($form, &$form_state) {
        $newuser = array(
          'name' => $form_state['values']['name'],
          'pass' => $form_state['values']['pass'],
          'status' => 1,
        );

	$authenticate = 0;
     try{
	if ($newuser['name'] !== "" && $newuser['pass'] !== ""){
		$authenticate = $GLOBALS['cassie']->testLogin($newuser['name'], $newuser['pass']);

		if ($authenticate === 1){
                	$_SESSION['logged_as'] = $newuser['name'];
                	$form_state['redirect'] = '/';
        	}else{
			$usernameInvalid = set_text("Käyttäjänimi tai salasana on väärin!", "Имя пользователя или пароль неверны!");
			$form_state['redirect'] = FALSE;
                	drupal_set_message($usernameInvalid, 'error');
        	}
	}else{
		$fillFields = set_text("Täytä kaikki kentät ensin!", "Заполните все поля, прежде всего!");
		$form_state['redirect'] = FALSE;
		drupal_set_message($fillFields, 'error');
	}
     }catch (Exception $e) {
	 $form_state['redirect'] = FALSE;
         drupal_set_message($e->getMessage(), "\n");
     }
}

function cassieregister_registration_page($form, &$form_state){
	change_title("Rekisteröidy", "Зарегистрироваться");

	$array = change_labels();
	$form['name'] = array(
		'#type' => 'textfield',
		'#title' => $array[0],
		'#attributes' => array('class' => array('hidevaluetext')),
	);
	$form['pass'] = array(
		'#type' => 'password',
		'#title' => $array[1],
		'#attributes' => array('class' => array('hidevaluetext')),
	);

	$form['repass'] = array(
                '#type' => 'password',
                '#title' => $array[4],
                '#attributes' => array('class' => array('hidevaluetext')),
        );

	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t($array[3]),
		'#attributes' => array('id' => 'registerButton'),
	);

	return $form;

}

function cassieregister_registration_page_submit($form, &$form_state) {
	$newuser = array(
	  'name' => $form_state['values']['name'],
	  'pass' => $form_state['values']['pass'],
	  'repass' => $form_state['values']['repass'],
	  'status' => 1,
	);
    try{
	if ($newuser['name'] !== "" && $newuser['pass'] !== "" && $newuser['repass'] !== ""){
	   if ($newuser['pass'] == $newuser['repass']){
	     $exists = $GLOBALS['cassie']->checkIfUserExists($newuser['name']);
	     if ($exists == 0){
		$GLOBALS['cassie']->testRegister($newuser['name'], $newuser['pass']);
		$success = set_text("Rekisteröinti onnistui!", "Регистрация прошла успешно!");
		$form_state['redirect'] = FALSE;
		drupal_set_message($success);
		header( "Refresh:1.5; url=/login", true, 303);
	     }else{
		$userExist = set_text("Käyttäjätunnus on jo käytetty!", "Имя пользователя уже используется!");
                $form_state['redirect'] = FALSE;
                drupal_set_message($userExist, 'error');
	     }
	   }else{
		$passwordMatch = set_text("Salasanat eivät ole samat!", "Пароли не совпадают!");
		$form_state['redirect'] = FALSE;
		drupal_set_message($passwordMatch, 'error');
	   }
        }else{
		$fillFields = set_text("Täytä  kaikki kentät ensin!", "Заполните все поля, прежде всего!");
		$form_state['redirect'] = FALSE;
                drupal_set_message($fillFields, 'error');
        }
    }catch (Exception $e) {
    	drupal_set_message($e->getMessage(), "\n");
    }
}

function change_labels(){
	$cookie = get_cookie();
	$array = array();

	if ($cookie[1] == "fi"){
		$array[0] = "Käyttäjätunnus";
		$array[1] = "Salasana";
		$array[2] = "Kirjaudu";
		$array[3] = "Rekisteröidy";
		$array[4] = "Salasana uudestaan";
	}else{
		$array[0] = "имя пользователя";
		$array[1] = "пароль";
		$array[2] = "войти";
		$array[3] = "Зарегистрироваться";
		$array[4] = "пароль еще раз";
	}
	return $array;
}
